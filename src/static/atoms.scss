// Atoms.scss file:
// Atoms are the basic building blocks of matter. Applied to web interfaces, 
// atoms are our HTML tags, such as a form label, an input or a button.

// Atoms mosty consist of html elements and are therefore defined as a scss style.
// Created atoms can be found in the ./component/atoms directory.

@import "./core/_settings";

:global(body) { // Body atom:
    &::-webkit-scrollbar {
        width: 6px;
      }
    &::-webkit-scrollbar-thumb {
        background: var(--color);
    }
    &::-webkit-scrollbar-track {
        background: var(--background);
    }

    font-family: var(--font-family);
    font-size: var(--font-size);
    line-height: var(--leading);
    letter-spacing: var(--kerning);
    background-color: var(--background);
    color: var(--color);
    margin: 0;
    padding:  calc(var(--leading) / 2) 0.5rem;
}

:global(p) { // Paragraph atom:
    margin-bottom: var(--leading);
}

:global(figcaption) {
    font-style: italic;
}

:global(p.is--small), :global(a.is--small), :global(figcaption.is--small) {
    font-size: .75rem;
}

:global(h1), :global(h2) { // Heading atoms:
    font-size: 2.4rem;
    letter-spacing: -0.03em;
    font-weight: 700;
    color: inherit;
    stroke: inherit;
    line-height: $font-leading-large;
}

:global(.is--accent) {
    color: var(--accent);
    stroke: var(--accent);
}

:global(em) {
    color: var(--accent);
    stroke: var(--accent);
    font-style: normal;
}

:global(ul.list) { // Unordered list atom:
    :global(li) {
        box-shadow: 0 1px 0 0 var(--color);
        padding-left: var(--font-size);
        padding-left: 2rem;
    }
}

:global(ul.list-horizontal) { // Unordered list atom (modifier horizontal):
    display: inline;

    :global(li) {
        display: inline;
        box-shadow: unset;
        padding: unset;
    }
}

// :global(ol) { // Ordered list atom:
//     counter-reset: item;
//     list-style-type: none;
//     padding: 0;

//     :global(li) { 
//         display: block; 
//         box-shadow: 0 1px 0 0 var(--color);

//         :global(&:before) { 
//             content: counter(item, decimal-leading-zero) "."; 
//             display: inline-block;
//             counter-increment: item;
//             width: 2rem;
//             opacity: .15;
//         }
//     }
// }

:global(a) { // Anchor atom:
    stroke: var(--color);
    box-shadow: 0px 1px 0px 0px var(--color);

    &:hover {
        box-shadow: 0px 1px 0px 0px var(--accent);
        background-color: var(--accent);
        color: var(--background);
        stroke: var(--background);
    }
}

:global(button), :global(a.as-button) { // Button & Anchor (modifier as-button) atom:
    padding: .25rem .5rem;
    stroke: var(--color);
    box-shadow: 0px 0px 0px 1px var(--color);

    &:hover {
        color: var(--background);
        stroke: var(--background);
        background-color: var(--accent);
        box-shadow: 0px 0px 0px 1px var(--accent);
    }
}

:global(.status-title) {
    grid-area: title;
}

:global(.status-content) {
    grid-area: content;
}
